//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Beat Player Controls"",
            ""id"": ""82dcabff-e86f-43c7-9661-e110517b9627"",
            ""actions"": [
                {
                    ""name"": ""Left Note"",
                    ""type"": ""Button"",
                    ""id"": ""8613aff6-7c89-4f46-9039-b4b71b178e6c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right Note"",
                    ""type"": ""Button"",
                    ""id"": ""2d3f0de3-17b8-4caf-a05a-25ca66dad0f3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Up Note"",
                    ""type"": ""Button"",
                    ""id"": ""cd3a8e7a-6680-420e-a04a-cafde773e611"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down Note"",
                    ""type"": ""Button"",
                    ""id"": ""e84a95e4-851a-4010-be05-b988935b0d00"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hinder (Lock Both)"",
                    ""type"": ""Button"",
                    ""id"": ""25518513-9b2e-4f23-a0a1-95018874f7e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hinder (Lock Right)"",
                    ""type"": ""Button"",
                    ""id"": ""9dcf1b74-6ff0-473f-982b-4681fef0b83c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hinder (Lock Left)"",
                    ""type"": ""Button"",
                    ""id"": ""e83b6ebe-9659-4b71-b003-c32fcb74acaf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hinder (Flicker)"",
                    ""type"": ""Button"",
                    ""id"": ""146f46da-7537-4df3-8a2d-770172c1e9f2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Help (Miss Both)"",
                    ""type"": ""Button"",
                    ""id"": ""a94d4ffa-c45e-40de-aa65-296e46587c40"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Help (Miss Right)"",
                    ""type"": ""Button"",
                    ""id"": ""ef5c3a5d-f92b-4c11-9fd5-7f519b326d56"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Help (Miss Left)"",
                    ""type"": ""Button"",
                    ""id"": ""0d7151c0-bee2-4672-9823-aeacbef56b24"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Help (Multiplier)"",
                    ""type"": ""Button"",
                    ""id"": ""3b26c4b2-512e-4c4d-bb1e-4a9e9c61c737"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5591b8a5-34fa-4651-8a60-75663364c41b"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": ""Press"",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": ""Controller"",
                    ""action"": ""Right Note"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""110af25d-aa03-4edd-96bc-dd207362c2a9"",
                    ""path"": ""<Keyboard>/slash"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Right Note"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6728c36d-7c5c-49da-bcbb-d4befe359de8"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": ""Press"",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": ""Controller"",
                    ""action"": ""Up Note"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e699e59c-13c8-4596-9d56-3c0ce9833ac6"",
                    ""path"": ""<Keyboard>/comma"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Up Note"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80f61f18-4ace-4477-bd10-6ee7067d8373"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": ""Press"",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": ""Controller"",
                    ""action"": ""Down Note"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a6ebd13-8aa1-46e2-b338-769c49cb4707"",
                    ""path"": ""<Keyboard>/period"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Down Note"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9730d7a-f818-4c12-bb7c-912f1ec0a074"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": ""Press"",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": ""Controller"",
                    ""action"": ""Left Note"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b9f464d5-a5a1-42c1-bd46-5158d3b1b6d9"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Left Note"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa4b8fe3-1bc9-46e9-91c2-e4ebd98ee4bd"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Hinder (Flicker)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d73cf147-37be-44c2-811c-b49aa5e65a35"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Hinder (Lock Left)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39696497-6895-45d1-8110-d96d9a1ddfe1"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Hinder (Lock Right)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13865897-1186-498e-9fd4-3c87d9312011"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Hinder (Lock Both)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ccd379c9-833b-46dd-9250-9ad3575be4b4"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Help (Multiplier)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""adcb954e-ba65-4dbe-aa4b-9553d24b1d6d"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Help (Miss Left)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24eb3c32-f2b9-4f94-8039-7ad43bba2650"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Help (Miss Right)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77ad82c4-5e79-4bd0-8d7b-d6c2651ab274"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Help (Miss Both)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""7293bf9d-6c9e-4217-a20f-4ca1f40de242"",
            ""actions"": [
                {
                    ""name"": ""TrackedDeviceOrientation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""67f0b654-2b0f-4cb3-84d1-b1d29e1231be"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDevicePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8aa0c4d8-1985-46d5-82d6-b241c54acf6f"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2b580b8a-6e23-432f-9145-8abcfb536f19"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""cf371837-4615-4078-a8a0-143db0e1f3d0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""31d92ce0-e7ca-4423-bf80-485d46226877"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4a054f6b-8f09-49da-92a0-41495f57e000"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""cd556ae1-4af7-4087-a820-2df73888e266"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""3e9c5541-2214-4b63-b6bf-3ce21d83f81b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""5d8c1bd4-b3ad-42b7-9d2a-bbf7c2c7299b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""aeb3ff63-9279-4e3e-b900-a3a5f680051e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""2b697802-f476-4f07-94b5-e1f3ec4488dd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6f98bee3-069b-444a-8ffa-5240cae17266"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3f563860-c4f2-42e9-a4f6-42d6f65b82c0"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f78bb9bc-5602-4455-ba92-f519f6398e35"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b9d35129-36e1-4d81-9200-d32782c77bf2"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c55169e4-f960-4bab-ae4c-ffbadec23898"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9c3e0ad7-1eec-4169-ac4c-1d6b287faa4c"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""60486358-4fa5-4b93-9839-fa0b1c0b1abf"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e87cfd23-7313-4528-99c5-45849eb7bf7e"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1fda8dba-9f8d-4ce0-be14-c5585220352d"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""14c0ce9f-cb24-4134-a50a-aef73a1cf362"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c8c12c84-df6c-4cfd-aa51-4751b06e6c0f"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3abb3c2d-0658-44dd-85f6-dc5cdbca5891"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a2bf5872-b09b-4ca3-880e-5913cbe1f571"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""337cbd90-89ec-4d59-ba76-f7c6da338f2a"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""10f9b29a-1238-4198-8325-8fd343e35bcf"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""be91df12-7b6d-4658-8313-0bb4d0e6da22"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""57216a10-5bd6-4dcc-9a03-3f2bf68d1518"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""151ac79e-a495-4877-9590-c866e5a51315"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3ff21335-afae-4c8b-8c04-92a99cb44ebe"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4d62f045-9611-4d60-8e81-6701f37d5bc0"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d9a3d784-348c-4010-bbbf-5d1e9fe9858f"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a2e105f9-40a2-4ca5-ab51-32af86ac77d2"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""bdfc0c49-1ddc-4656-902d-93342ca9d09c"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""00f87d72-8c28-4e34-a71b-2194bd065706"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1d5adf3-1775-4e33-ba63-76388123200a"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f06fe9d-795b-4cfa-a3ae-39ad3f2c34da"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad76a582-b508-420f-832a-d395a4baeb7f"",
                    ""path"": ""<Pen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""012afde1-7671-4c94-9bf6-c528e41fb2a6"",
                    ""path"": ""<Touchscreen>/touch*/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""78be99e1-6c56-4310-b8c2-27f0a0f9e75f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3eb66039-4274-471d-9912-7190b91d6a4a"",
                    ""path"": ""<Pen>/tip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8622c792-4d86-4f9a-b684-02704e6ece66"",
                    ""path"": ""<Touchscreen>/touch*/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ea5d076-c994-4b13-9040-99717189ee74"",
                    ""path"": ""<XRController>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""af388dd3-4d29-403b-a961-d744b3b219c9"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80a6e51a-4bfd-4fad-ac44-a11174b0135f"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eeb7004d-8a27-4fb2-9bfb-7436477e2e7b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb283d0e-3eff-4344-8490-7e7feda3e083"",
                    ""path"": ""<XRController>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TrackedDevicePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""838297db-39ec-4725-a1d8-e3b8736ee866"",
                    ""path"": ""<XRController>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TrackedDeviceOrientation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Controller"",
            ""bindingGroup"": ""Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Beat Player Controls
        m_BeatPlayerControls = asset.FindActionMap("Beat Player Controls", throwIfNotFound: true);
        m_BeatPlayerControls_LeftNote = m_BeatPlayerControls.FindAction("Left Note", throwIfNotFound: true);
        m_BeatPlayerControls_RightNote = m_BeatPlayerControls.FindAction("Right Note", throwIfNotFound: true);
        m_BeatPlayerControls_UpNote = m_BeatPlayerControls.FindAction("Up Note", throwIfNotFound: true);
        m_BeatPlayerControls_DownNote = m_BeatPlayerControls.FindAction("Down Note", throwIfNotFound: true);
        m_BeatPlayerControls_HinderLockBoth = m_BeatPlayerControls.FindAction("Hinder (Lock Both)", throwIfNotFound: true);
        m_BeatPlayerControls_HinderLockRight = m_BeatPlayerControls.FindAction("Hinder (Lock Right)", throwIfNotFound: true);
        m_BeatPlayerControls_HinderLockLeft = m_BeatPlayerControls.FindAction("Hinder (Lock Left)", throwIfNotFound: true);
        m_BeatPlayerControls_HinderFlicker = m_BeatPlayerControls.FindAction("Hinder (Flicker)", throwIfNotFound: true);
        m_BeatPlayerControls_HelpMissBoth = m_BeatPlayerControls.FindAction("Help (Miss Both)", throwIfNotFound: true);
        m_BeatPlayerControls_HelpMissRight = m_BeatPlayerControls.FindAction("Help (Miss Right)", throwIfNotFound: true);
        m_BeatPlayerControls_HelpMissLeft = m_BeatPlayerControls.FindAction("Help (Miss Left)", throwIfNotFound: true);
        m_BeatPlayerControls_HelpMultiplier = m_BeatPlayerControls.FindAction("Help (Multiplier)", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_TrackedDeviceOrientation = m_UI.FindAction("TrackedDeviceOrientation", throwIfNotFound: true);
        m_UI_TrackedDevicePosition = m_UI.FindAction("TrackedDevicePosition", throwIfNotFound: true);
        m_UI_RightClick = m_UI.FindAction("RightClick", throwIfNotFound: true);
        m_UI_MiddleClick = m_UI.FindAction("MiddleClick", throwIfNotFound: true);
        m_UI_ScrollWheel = m_UI.FindAction("ScrollWheel", throwIfNotFound: true);
        m_UI_Click = m_UI.FindAction("Click", throwIfNotFound: true);
        m_UI_Point = m_UI.FindAction("Point", throwIfNotFound: true);
        m_UI_Cancel = m_UI.FindAction("Cancel", throwIfNotFound: true);
        m_UI_Submit = m_UI.FindAction("Submit", throwIfNotFound: true);
        m_UI_Navigate = m_UI.FindAction("Navigate", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Beat Player Controls
    private readonly InputActionMap m_BeatPlayerControls;
    private IBeatPlayerControlsActions m_BeatPlayerControlsActionsCallbackInterface;
    private readonly InputAction m_BeatPlayerControls_LeftNote;
    private readonly InputAction m_BeatPlayerControls_RightNote;
    private readonly InputAction m_BeatPlayerControls_UpNote;
    private readonly InputAction m_BeatPlayerControls_DownNote;
    private readonly InputAction m_BeatPlayerControls_HinderLockBoth;
    private readonly InputAction m_BeatPlayerControls_HinderLockRight;
    private readonly InputAction m_BeatPlayerControls_HinderLockLeft;
    private readonly InputAction m_BeatPlayerControls_HinderFlicker;
    private readonly InputAction m_BeatPlayerControls_HelpMissBoth;
    private readonly InputAction m_BeatPlayerControls_HelpMissRight;
    private readonly InputAction m_BeatPlayerControls_HelpMissLeft;
    private readonly InputAction m_BeatPlayerControls_HelpMultiplier;
    public struct BeatPlayerControlsActions
    {
        private @Controls m_Wrapper;
        public BeatPlayerControlsActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftNote => m_Wrapper.m_BeatPlayerControls_LeftNote;
        public InputAction @RightNote => m_Wrapper.m_BeatPlayerControls_RightNote;
        public InputAction @UpNote => m_Wrapper.m_BeatPlayerControls_UpNote;
        public InputAction @DownNote => m_Wrapper.m_BeatPlayerControls_DownNote;
        public InputAction @HinderLockBoth => m_Wrapper.m_BeatPlayerControls_HinderLockBoth;
        public InputAction @HinderLockRight => m_Wrapper.m_BeatPlayerControls_HinderLockRight;
        public InputAction @HinderLockLeft => m_Wrapper.m_BeatPlayerControls_HinderLockLeft;
        public InputAction @HinderFlicker => m_Wrapper.m_BeatPlayerControls_HinderFlicker;
        public InputAction @HelpMissBoth => m_Wrapper.m_BeatPlayerControls_HelpMissBoth;
        public InputAction @HelpMissRight => m_Wrapper.m_BeatPlayerControls_HelpMissRight;
        public InputAction @HelpMissLeft => m_Wrapper.m_BeatPlayerControls_HelpMissLeft;
        public InputAction @HelpMultiplier => m_Wrapper.m_BeatPlayerControls_HelpMultiplier;
        public InputActionMap Get() { return m_Wrapper.m_BeatPlayerControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BeatPlayerControlsActions set) { return set.Get(); }
        public void SetCallbacks(IBeatPlayerControlsActions instance)
        {
            if (m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface != null)
            {
                @LeftNote.started -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnLeftNote;
                @LeftNote.performed -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnLeftNote;
                @LeftNote.canceled -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnLeftNote;
                @RightNote.started -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnRightNote;
                @RightNote.performed -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnRightNote;
                @RightNote.canceled -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnRightNote;
                @UpNote.started -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnUpNote;
                @UpNote.performed -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnUpNote;
                @UpNote.canceled -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnUpNote;
                @DownNote.started -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnDownNote;
                @DownNote.performed -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnDownNote;
                @DownNote.canceled -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnDownNote;
                @HinderLockBoth.started -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHinderLockBoth;
                @HinderLockBoth.performed -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHinderLockBoth;
                @HinderLockBoth.canceled -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHinderLockBoth;
                @HinderLockRight.started -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHinderLockRight;
                @HinderLockRight.performed -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHinderLockRight;
                @HinderLockRight.canceled -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHinderLockRight;
                @HinderLockLeft.started -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHinderLockLeft;
                @HinderLockLeft.performed -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHinderLockLeft;
                @HinderLockLeft.canceled -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHinderLockLeft;
                @HinderFlicker.started -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHinderFlicker;
                @HinderFlicker.performed -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHinderFlicker;
                @HinderFlicker.canceled -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHinderFlicker;
                @HelpMissBoth.started -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHelpMissBoth;
                @HelpMissBoth.performed -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHelpMissBoth;
                @HelpMissBoth.canceled -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHelpMissBoth;
                @HelpMissRight.started -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHelpMissRight;
                @HelpMissRight.performed -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHelpMissRight;
                @HelpMissRight.canceled -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHelpMissRight;
                @HelpMissLeft.started -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHelpMissLeft;
                @HelpMissLeft.performed -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHelpMissLeft;
                @HelpMissLeft.canceled -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHelpMissLeft;
                @HelpMultiplier.started -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHelpMultiplier;
                @HelpMultiplier.performed -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHelpMultiplier;
                @HelpMultiplier.canceled -= m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface.OnHelpMultiplier;
            }
            m_Wrapper.m_BeatPlayerControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LeftNote.started += instance.OnLeftNote;
                @LeftNote.performed += instance.OnLeftNote;
                @LeftNote.canceled += instance.OnLeftNote;
                @RightNote.started += instance.OnRightNote;
                @RightNote.performed += instance.OnRightNote;
                @RightNote.canceled += instance.OnRightNote;
                @UpNote.started += instance.OnUpNote;
                @UpNote.performed += instance.OnUpNote;
                @UpNote.canceled += instance.OnUpNote;
                @DownNote.started += instance.OnDownNote;
                @DownNote.performed += instance.OnDownNote;
                @DownNote.canceled += instance.OnDownNote;
                @HinderLockBoth.started += instance.OnHinderLockBoth;
                @HinderLockBoth.performed += instance.OnHinderLockBoth;
                @HinderLockBoth.canceled += instance.OnHinderLockBoth;
                @HinderLockRight.started += instance.OnHinderLockRight;
                @HinderLockRight.performed += instance.OnHinderLockRight;
                @HinderLockRight.canceled += instance.OnHinderLockRight;
                @HinderLockLeft.started += instance.OnHinderLockLeft;
                @HinderLockLeft.performed += instance.OnHinderLockLeft;
                @HinderLockLeft.canceled += instance.OnHinderLockLeft;
                @HinderFlicker.started += instance.OnHinderFlicker;
                @HinderFlicker.performed += instance.OnHinderFlicker;
                @HinderFlicker.canceled += instance.OnHinderFlicker;
                @HelpMissBoth.started += instance.OnHelpMissBoth;
                @HelpMissBoth.performed += instance.OnHelpMissBoth;
                @HelpMissBoth.canceled += instance.OnHelpMissBoth;
                @HelpMissRight.started += instance.OnHelpMissRight;
                @HelpMissRight.performed += instance.OnHelpMissRight;
                @HelpMissRight.canceled += instance.OnHelpMissRight;
                @HelpMissLeft.started += instance.OnHelpMissLeft;
                @HelpMissLeft.performed += instance.OnHelpMissLeft;
                @HelpMissLeft.canceled += instance.OnHelpMissLeft;
                @HelpMultiplier.started += instance.OnHelpMultiplier;
                @HelpMultiplier.performed += instance.OnHelpMultiplier;
                @HelpMultiplier.canceled += instance.OnHelpMultiplier;
            }
        }
    }
    public BeatPlayerControlsActions @BeatPlayerControls => new BeatPlayerControlsActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_TrackedDeviceOrientation;
    private readonly InputAction m_UI_TrackedDevicePosition;
    private readonly InputAction m_UI_RightClick;
    private readonly InputAction m_UI_MiddleClick;
    private readonly InputAction m_UI_ScrollWheel;
    private readonly InputAction m_UI_Click;
    private readonly InputAction m_UI_Point;
    private readonly InputAction m_UI_Cancel;
    private readonly InputAction m_UI_Submit;
    private readonly InputAction m_UI_Navigate;
    public struct UIActions
    {
        private @Controls m_Wrapper;
        public UIActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @TrackedDeviceOrientation => m_Wrapper.m_UI_TrackedDeviceOrientation;
        public InputAction @TrackedDevicePosition => m_Wrapper.m_UI_TrackedDevicePosition;
        public InputAction @RightClick => m_Wrapper.m_UI_RightClick;
        public InputAction @MiddleClick => m_Wrapper.m_UI_MiddleClick;
        public InputAction @ScrollWheel => m_Wrapper.m_UI_ScrollWheel;
        public InputAction @Click => m_Wrapper.m_UI_Click;
        public InputAction @Point => m_Wrapper.m_UI_Point;
        public InputAction @Cancel => m_Wrapper.m_UI_Cancel;
        public InputAction @Submit => m_Wrapper.m_UI_Submit;
        public InputAction @Navigate => m_Wrapper.m_UI_Navigate;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @TrackedDeviceOrientation.started -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDevicePosition.started -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDevicePosition;
                @RightClick.started -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
                @RightClick.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
                @RightClick.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
                @MiddleClick.started -= m_Wrapper.m_UIActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnMiddleClick;
                @ScrollWheel.started -= m_Wrapper.m_UIActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnScrollWheel;
                @Click.started -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
                @Point.started -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
                @Point.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
                @Point.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
                @Cancel.started -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Submit.started -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Submit.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Submit.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Navigate.started -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @TrackedDeviceOrientation.started += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled += instance.OnTrackedDeviceOrientation;
                @TrackedDevicePosition.started += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled += instance.OnTrackedDevicePosition;
                @RightClick.started += instance.OnRightClick;
                @RightClick.performed += instance.OnRightClick;
                @RightClick.canceled += instance.OnRightClick;
                @MiddleClick.started += instance.OnMiddleClick;
                @MiddleClick.performed += instance.OnMiddleClick;
                @MiddleClick.canceled += instance.OnMiddleClick;
                @ScrollWheel.started += instance.OnScrollWheel;
                @ScrollWheel.performed += instance.OnScrollWheel;
                @ScrollWheel.canceled += instance.OnScrollWheel;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @Point.started += instance.OnPoint;
                @Point.performed += instance.OnPoint;
                @Point.canceled += instance.OnPoint;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
            }
        }
    }
    public UIActions @UI => new UIActions(this);
    private int m_ControllerSchemeIndex = -1;
    public InputControlScheme ControllerScheme
    {
        get
        {
            if (m_ControllerSchemeIndex == -1) m_ControllerSchemeIndex = asset.FindControlSchemeIndex("Controller");
            return asset.controlSchemes[m_ControllerSchemeIndex];
        }
    }
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    public interface IBeatPlayerControlsActions
    {
        void OnLeftNote(InputAction.CallbackContext context);
        void OnRightNote(InputAction.CallbackContext context);
        void OnUpNote(InputAction.CallbackContext context);
        void OnDownNote(InputAction.CallbackContext context);
        void OnHinderLockBoth(InputAction.CallbackContext context);
        void OnHinderLockRight(InputAction.CallbackContext context);
        void OnHinderLockLeft(InputAction.CallbackContext context);
        void OnHinderFlicker(InputAction.CallbackContext context);
        void OnHelpMissBoth(InputAction.CallbackContext context);
        void OnHelpMissRight(InputAction.CallbackContext context);
        void OnHelpMissLeft(InputAction.CallbackContext context);
        void OnHelpMultiplier(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnTrackedDeviceOrientation(InputAction.CallbackContext context);
        void OnTrackedDevicePosition(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnNavigate(InputAction.CallbackContext context);
    }
}
